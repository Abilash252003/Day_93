////100 Days of RTL/////

////Abilash P/////

////Moore circuit-overlapping/////

module sequence_detector_1001(clk, rst, x, z);
  input clk, rst, x;
  output reg z;
  
  parameter A = 5'h1;
  parameter B = 5'h2;
  parameter C = 5'h3;
  parameter D = 5'h4;
  parameter E = 5'h5;
  
  reg [4:0] state, next_state;
  
  always @(posedge clk) begin
    if (rst)
      state <= A;
    else
      state <= next_state;
  end
 
  always @(state or x) begin
    case(state)
      A: begin
        if (x == 0)
          next_state <= A;
        else
          next_state <= B;
      end
        
      B: begin
        if (x == 0)
          next_state <= C;
        else
          next_state <= B;
      end
        
      C: begin
        if (x == 0)
          next_state <= D;
        else
          next_state <= B;
      end
        
      D: begin
        if (x == 0)
          next_state <= A;
        else
          next_state <= E;
      end
        
      E: begin
        if (x == 0)
          next_state <= C;
        else
          next_state <= B;
      end
        
      default: next_state <= A;
    endcase
  end
  
  assign z = (state == D) && (x == 1) ? 1 : 0;
  
endmodule
